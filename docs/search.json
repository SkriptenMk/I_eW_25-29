[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Willkommen",
    "section": "",
    "text": "Hier finden Sie die Informationen für den Informatikunterricht."
  },
  {
    "objectID": "index.html#programm",
    "href": "index.html#programm",
    "title": "Willkommen",
    "section": "Programm",
    "text": "Programm\n\n\n\nDatum\nThema\n\n\n\n\n18.08.2025\nWas ist Informatik\n\n\n25.08.2025\nVorbereiten der Arbeitsumgebung\n\n\n01.09.2025\nProblemlösung in der Informatik\n\n\n08.09.2025\nVariablen als Wegweiser zu Objekten\n\n\n15.09.2025\nSchlaufen\n\n\n22.09.2025\nBedingungen\n\n\n20.10.2025\nAnwendungsübung\n\n\n27.10.2025\nIndividuelle Prüfungsvorbereitung\n\n\n03.11.2025\nTest\n\n\n10.11.2025\nDatenstrukturen\n\n\n17.11.2025\nDatenstrukturen\n\n\n24.11.2025\nAlgorithmen\n\n\n01.12.2025\nAlgorithmen\n\n\n08.12.2025\nWiederholung ohne Schleife (Rekursion)\n\n\n15.12.2025\nAnwendungsübungen\n\n\n05.01.2026\nIndividuelle Prüfungsvorbereitung\n\n\n12.01.2026\nTest\n\n\n\nDas Programm widerspiegelt den aktuellen Stand der Planung. Es ist im Verlauf des Semesters mit Änderungen zu rechnen."
  },
  {
    "objectID": "index.html#materielle-voraussetzungen",
    "href": "index.html#materielle-voraussetzungen",
    "title": "Willkommen",
    "section": "Materielle Voraussetzungen",
    "text": "Materielle Voraussetzungen\nFür den Informatikunterricht ist ein Laptop erforderlich (mit einem iPad können Sie die im Unterricht gestellten Aufgaben nicht lösen). Für Ihren Laptop brachen Sie zur Installation der erforderlichen Software Administratorenrechte.\nAusserdem müssen Sie sicherstellen, dass Ihr Akku zu Beginn des Unterrichts einen Ladestand aufweist, der eine Doppelstunde durchhält."
  },
  {
    "objectID": "index.html#beurteilung",
    "href": "index.html#beurteilung",
    "title": "Willkommen",
    "section": "Beurteilung",
    "text": "Beurteilung\nPro Semester sind zwei schriftliche Prüfungen vorgesehen. Ausserdem wird die mündliche Beteiligung benotet. Als mündliche Beteiligung gilt insbesondere auch das Stellen von Fragen.\nDie Zeugnisnote berechnet sich als gewichteter Durchschnitt aus den beiden schriftlichen Prüfungen und der Note für die mündliche Beteiligung. Die Durchschnittsnote der beiden schriftlichen Prüfungen wird mit 90%, die Note für die mündliche Beteiligung mit 10% gewichtet.\nFalls jemand eine persönliche Besprechung wünscht,  kann sich hier für eine Sprechstunde anmelden."
  },
  {
    "objectID": "files/lektionen_hs25/250702_systemeinrichtung/setup.html",
    "href": "files/lektionen_hs25/250702_systemeinrichtung/setup.html",
    "title": "Arbeitsumgebung (Arbeiten mit Jupyter Notebooks)",
    "section": "",
    "text": "In der Informatik geht es darum, wie Informationsverarbeitung mit Hilfe von Computern automatisiert werden kann.\nDie Automatisierung der Informationsverarbeitung erfordert die Verwendung von Programmiersprachen. Im Informatikunterricht wird in erster Linie mit der Programmiersprache Python gearbeitet.\nIm folgenden findet sich eine Anleitung für die Installation der für den Unterricht erforderlichen Programme."
  },
  {
    "objectID": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#ausgangslage",
    "href": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#ausgangslage",
    "title": "Arbeitsumgebung (Arbeiten mit Jupyter Notebooks)",
    "section": "",
    "text": "In der Informatik geht es darum, wie Informationsverarbeitung mit Hilfe von Computern automatisiert werden kann.\nDie Automatisierung der Informationsverarbeitung erfordert die Verwendung von Programmiersprachen. Im Informatikunterricht wird in erster Linie mit der Programmiersprache Python gearbeitet.\nIm folgenden findet sich eine Anleitung für die Installation der für den Unterricht erforderlichen Programme."
  },
  {
    "objectID": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#installation-von-python",
    "href": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#installation-von-python",
    "title": "Arbeitsumgebung (Arbeiten mit Jupyter Notebooks)",
    "section": "Installation von Python",
    "text": "Installation von Python\nDieser Abschnitt führt Sie Schritt für Schritt durch die Installation von Python auf einem Windows-Rechner.\n\nLaden Sie die neueste Version von Python von der offiziellen Website herunter: python.org.\nFühren Sie das heruntergeladene Installationsprogramm durch Doppelklick auf die Datei aus. Stellen Sie sicher, dass Sie die Option “Add Python to PATH” aktivieren, bevor Sie auf “Install Now” klicken.\nÜberprüfen Sie die Installation, indem Sie die Eingabeaufforderung öffnen (Terminal \\(\\rightarrow\\) Windows-Taste + R, dann cmd eingeben) und den Befehl python --version eingeben. Dies sollte die installierte Python-Version anzeigen."
  },
  {
    "objectID": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#hello-world",
    "href": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#hello-world",
    "title": "Arbeitsumgebung (Arbeiten mit Jupyter Notebooks)",
    "section": "Hello World",
    "text": "Hello World\nEs hat sich eingebürgert, dass das erste Programm, das ausgeführt wird, ein Programm ist, das den Text “Hello World” auf dem Bildschirm ausgibt. Um dieser Tradition zu folgen, führen Sie die folgenden Schritte aus:\n\nÖffnen Sie ein Terminal (Windows-Taste + R, dann cmd eingeben).\nGeben Sie den Befehl python ein, um die Python-Shell zu starten. Die Python Shell sollte ungefähr so, wie das folgende Bild aussehen.\n\n\n\nPython Shell\n\n\nGeben Sie den folgenden Befehl ein und drücken Sie anschliessend die Eingabetaste:\nprint(\"Hello World\")\nDas Resultat sollte wie das folgende Bild aussehen.\n\n\n\nPython Shell\n\n\n\nGratuliere - Sie haben Ihr erstes Python-Programm erfolgreich ausgeführt!"
  },
  {
    "objectID": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#arbeitsumgebung",
    "href": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#arbeitsumgebung",
    "title": "Arbeitsumgebung (Arbeiten mit Jupyter Notebooks)",
    "section": "Arbeitsumgebung",
    "text": "Arbeitsumgebung\nIm Unterricht wird nicht direkt in der Python-Shell gearbeitet, sondern mit sogenannten Jupyter Notebooks. Dies erfordert ein paar weitere Vorbereitungsarbeiten.\n\nErstellen Sie im Ordner “Informatik” einen Unterordner mit dem Heutigen Datum als Namen. Formatieren Sie das Datum nach dem Schema “YYMMDD”, für den 1. August 2025 wäre das zum Beispiel “250801”.\nÖffnen Sie den soeben erstellten Ordner.\nGeben Sie die Tastenfolge Ctrl + L ein, um die Adresszeile des Dateimanagers zu aktivieren.\nÜberschreiben Sie den Inhalt der Adresszeile mit dem Text cmd und drücken Sie die Eingabetaste. Dadurch wird ein Terminal geöffnet, das direkt im aktuellen Ordner arbeitet.\nGeben Sie im neu geöffneten Terminal den folgenden Befehl ein und drücken Sie die Eingabetaste:\npython -m venv .venv\nDadurch wird eine sogenannte Python Virtual Environment erstellt (venv wegen Virtual Environment). Dieses Python Virtual Environment dient dazu, die eigenen Programmierprojekte unabhängig voneinander gestalten zu können.\nAktivieren Sie das Python Virtual Environment mit dem folgenden Befehl:\n .venv\\Scripts\\activate\nIhr Terminal sieht nach dem Erstellen und Aktivieren der Python Virtual Environment ungefähr so aus:\n\n\n\nAktivierte Python Virtual Environment\n\n\nDas Wort in der Klammer am Anfang der Zeile zeigt den Namen der aktiven Python Virtual Environment an. Im vorliegenden Fall ist das .venv.\nIn der nun aktivierten Python Virtual Environment installieren Sie die benötigten Pakete mit dem folgenden Befehl:\npip install jupyter\nDas dauert eine Weile.\nWährend der Installation werden die benötigten Pakete (Ergänzungen zur bestehenden Python Installation) heruntergeladen und in der Python Virtual Environment gespeichert. Das Terminal sieht dabei ungefähr so aus:\n\n\n\nTerminal während der Jupyter Installation\n\n\nAlle in einer Python Virtual Environment installierten Pakete sind innerhalb dieser Umgebung dauerhaft verfügbar und müssen daher für das gleiche Projekt kein zweites Mal installiert werden.\nStarten Sie den Jupyter Server mit dem folgenden Befehl:\n jupyter-lab\nDies startet den Jupyter Notebook Server und öffnet automatisch ein Browserfenster mit der Jupyter Notebook Oberfläche.\n\n\n\nStartseite Jupyter Lab\n\n\nKlicken Sie auf den Button “Python 3 (ipykernel)” unter dem Titel Notebook.\nDamit starten Sie ein neues Jupyter Notebook. Der Cursor blinkt in einer leeren Zelle. Bei dieser Zelle handelt es sich um eine sogenannte Code-Zelle. In einer Code-Zelle können Sie Python Code eingeben und ausführen.\nÜberprüfen Sie das, indem Sie in der Zelle den Befehl print(\"Hello World\") eingeben und anschliessend die Tastenfolge Shift + Enter drücken (alternativ können Sie auch auf den Button “Run” in der Werkzeugleiste klicken).\nDas Resultat sollte wie das folgende Bild aussehen.\n\n\n\nHello World in einem Jupyter Notebook\n\n\nIn einem Jupyter Notebook können Sie nicht nur Python Code ausführen, sondern auch Text (formatiert in Markdown) darstellen.\nFür die Darstellung von Text müssen Sie die Zelle als Text-Zelle markieren. Dazu klicken Sie auf den Button “Code” in der Werkzeugleiste und wählen im Dropdown-Menü die Option “Markdown” aus.\n\n\n\nUmstellen der Zelle auf Markdown\n\n\nProbieren Sie das aus. Schreiben Sie einen Titel und einen kurzen Text in die Zelle unterhalb der Code-Zelle mit pringt(\"Hello World\"). Damit der Text in der Zelle formatiert angezeigt wird, müssen Sie die Zelle mit der Tastenfolge Shift + Enter ausführen (analog zum Ausführen von Code-Zellen).\nEine Zelle ist entweder eine Code-Zelle oder eine Text-Zelle. Für den Wechsel zwischen Code- und Text-Darstellung müssen Sie je eine neue Zelle anlegen. Das geht mit der Tastenfolge Esc + B (für “Below”) oder Esc + A (für “Above”) während Sie sich in einer Zelle befinden. Alternativ können Sie auch die Buttons “Insert Cell Below” oder “Insert Cell Above” aus den Werkzeugen der Zelle verwenden.\nDas Jupyter Notebook ist eine Datei mit der Endung .ipynb. Neu erstellte Jupyter Notebooks erhalten den Namen “Untitled.ipynb”. Um diesen Namen zu ändern, klicken Sie mit der rechten Maustatste auf den Titel “Untitled” in der oberen linken Ecke des Jupyter Notebooks und wählen Sie die Option “Rename” aus dem Kontextmenü. Anschliessend können Sie den Namen des Jupyter Notebooks eingeben."
  },
  {
    "objectID": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#öffnen-bestehender-jupyter-notebooks",
    "href": "files/lektionen_hs25/250702_systemeinrichtung/setup.html#öffnen-bestehender-jupyter-notebooks",
    "title": "Arbeitsumgebung (Arbeiten mit Jupyter Notebooks)",
    "section": "Öffnen bestehender Jupyter Notebooks",
    "text": "Öffnen bestehender Jupyter Notebooks\nHäufiger als das Erstellen eines neuen Jupyter Notebooks ist das Öffnen eines bereits bestehenden Jupyter Notebooks. Hier wird das entsprechende Vorgehen beschrieben.\n\nNavigieren Sie in den Ordner in dem sich das Jupyter Notebook befindet.\nStellen Sie sicher, dass der Ordner über eine Python Virtual Environment mit installierten Jupyter Paketen verfügt.\nUm zu überprüfen, welche Pakete in der Python Virtual Environment installiert sind, starten Sie die Python Virtual Environment und geben den Befehl pip list ein. Dieser Listet alle in der Python Virtual Environment installierten Pakete auf.\nStarten Sie den Jupyter Server mit dem Befehl jupyter-lab.\nÖffnen Sie das Dateiverzeichnis. Dazu müssen Sie auf dem linken Rand das Ordner-Symbol anklicken.\nWählen Sie das Jupyter Notebook aus, das Sie öffnen möchten. Mit einem Doppelklick auf das Jupyter Notebook wird dieses geöffnet.\nWenn Sie das Dateiverzeichnis wieder schliessen möchten, klicken Sie auf das Ordner-Symbol auf der linken Seite erneut.\n\nDiese Schritte funktionieren auch, wenn Sie ein Jupyter Notebook öffnen möchten, das Sie von jemand anderem erhalten haben. Sie müssen dieses dazu lediglich in den Ordner kopieren, in dem sich die Python Virtual Environment mit den installierten Jupyter Paketen befindet."
  },
  {
    "objectID": "files/HS_25.html",
    "href": "files/HS_25.html",
    "title": "Unterlagen für das Herbstsemester 2025/2026",
    "section": "",
    "text": "Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n      \n        Author\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\n\nTitle\n\n\n\nAuthor\n\n\n\n\n\n\n\n\n28.06.2025\n\n\nSpeicherorganisation\n\n\nJacques Mock Schindler\n\n\n\n\n\n\n02.07.2025\n\n\nArbeitsumgebung (Arbeiten mit Jupyter Notebooks)\n\n\nJacques Mock Schindler\n\n\n\n\n\n\n01.09.2025\n\n\nProblemlösung in der Informatik\n\n\nJacques Mock Schindler\n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\n \n\n\n \n\n\n \n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "files/lektionen_hs25/250628_speicher/speicherorganisation.html",
    "href": "files/lektionen_hs25/250628_speicher/speicherorganisation.html",
    "title": "Speicherorganisation",
    "section": "",
    "text": "Informationen sind in Computern in Dateien gespeichert. Die gespeicherten Informationen können dabei ganz unterschiedlicher Art, wie zum Beispiel Texte, Bilder oder Videos, sein.\nAls Modell, wie man sich Dateien vorstellen kann, hat sich das Bild von Dossiers in Ordnern etabliert. Die einzelnen Dossiers sind die Dateien und die Ordner sind die Strukturen, in denen die Dateien abgelegt sind. Diese Konstruktion kann über mehrere Ebenen hinaus verschachtelt werde (Ordner in Gestellen, die wiederum in einzelnen Räumen stehen, etc.)."
  },
  {
    "objectID": "files/lektionen_hs25/250628_speicher/speicherorganisation.html#dateinamen-und-pfade",
    "href": "files/lektionen_hs25/250628_speicher/speicherorganisation.html#dateinamen-und-pfade",
    "title": "Speicherorganisation",
    "section": "Dateinamen und Pfade",
    "text": "Dateinamen und Pfade\nDamit Dateien identifiziert und gefunden werden können, müssen sie einen Namen haben. Grundsätzlich gibt es keine Einschränkungen, wie Dateien benannt werden. Die meisten Dateinamen bestehen allerdings aus zwei Teilen: dem eigentlichen Dateinamen und der Dateinamenserweiterung.\nDer eigentliche Dateiname wird idealerweise so festgelegt, dass er einen Rückschluss auf den Inhalt der Datei zulässt.\nDie Dateinamenserweiterung ist ein Zusatz, der Auskunft über den Dateityp gibt. Sie steht hinter einem Punkt hinter dem eigentlichen Dateinamen. Auf Windows Rechnern wird die Dateinamenserweiterung im Dateimanager in der Standardeinstellung nicht angezeigt. Um dies zu ändern, muss in den Einstellungen des Dateimanagers die Option “Dateinamenerweiterungen anzeigen” aktiviert werden (Ansicht &gt; Anzeigen &gt; Dateinamenserweiterung).\nDamit Dateien besser ausgetauscht werden können, empfiehlt es sich, für die Namen lediglich Buchstaben, Zahlen und Unterstriche (sog. ASCII-Zeichen) zu verwenden.\nDamit man Dateien finden kann, muss man wissen, wo sie abgelegt worden sind. Übertragen auf das Modell von Dossiers in Ordnern bedeutet das, zu wissen, welches Dossier in welchem Ordner in welchem Gestell in welchem Raum abgelegt ist. Wie in einem realen Archiv, geht man dabei vom Raum zum Gestell, zum Ordner und schliesslich zum Dossier. In der Informatik wird dieser Weg als Pfad bezeichnet. Auf einem Windows-Rechner beginnt dieser Pfad mit dem sogenannten Laufwerksbuchstaben, gefolgt von einem Doppelpunkt und einem Backslash (\\). Aus historischen Gründen ist der Laufwerksbuchstabe auf Windows-Rechnern Standardmässig der Buchstabe C.\nEin Beispiel für einen Pfad könnte so aussehen:\nC:\\Users\\fritz\\Documents\\text.docx\nIn diesem Beispiel ist C: der Laufwerksbuchstabe, Users der Ordner, fritz der Unterordner, Documents der Unterordner von fritz und text.docx die Datei, die im Ordner Documents abgelegt ist. Users ist ein von Windows standardmässig angelegter Ordner, in dem die persönlichen Daten der Benutzer abgelegt werden. Der Ordner fritz ist der persönliche Ordner des Benutzers fritz. Der Ordner Documents wird ebenfalls standardmässig von Windows im Ordner jedes Benutzers angelegt. Dem Benutzer fritz steht es frei, diesen Ordner zu verwenden und darin Dateien oder Underordner anzulegen.\nDer Dateiname text.docx verweist mit seiner Dateinamenserweiterung .docx auf eine Datei, die mit dem Programm Microsoft Word erstellt worden ist."
  },
  {
    "objectID": "files/lektionen_hs25/250628_speicher/speicherorganisation.html#dateien-in-der-cloud",
    "href": "files/lektionen_hs25/250628_speicher/speicherorganisation.html#dateien-in-der-cloud",
    "title": "Speicherorganisation",
    "section": "Dateien in der Cloud",
    "text": "Dateien in der Cloud\nDateien können nicht nur lokal auf dem Computer gespeichert werden. Damit von überall und jederzeit auf Dateien zugegriffen werden kann, werden Dateien in der Cloud gespeichert. Dabei handelt es sich um Server in Rechenzentren, die über das Internet erreichbar sind. Beispiele für solche Cloud-Dienst sind OneDrive von Microsoft oder Google Drive.\nAblageorte auf OneDrive werden in Windows direkt in der Verzeichnisstruktur des Betriebssystems angezeigt, solche von Google erhalten auf Windows einen eigenen Laufwerksbuchstaben (G:\\).\nDamit auf die Dateien in der Cloud zugegriffen werden kann, ist eine Internetverbindung erforderlich."
  },
  {
    "objectID": "files/lektionen_hs25/250628_speicher/speicherorganisation.html#dateistruktur-für-die-schule",
    "href": "files/lektionen_hs25/250628_speicher/speicherorganisation.html#dateistruktur-für-die-schule",
    "title": "Speicherorganisation",
    "section": "Dateistruktur für die Schule",
    "text": "Dateistruktur für die Schule\nFür den schulischen Bedarf erscheint es sinnvoll eine Dateistruktur nach Fächern anzulegen. Im Ordner Documents wird dazu für jedes Fach ein eigener Unterordner angelegt. Innerhalb der jeweiligen Fachordner kann eine weitere Struktur nach Semester oder nach Thema sinnvoll sein. Ein Beispiel für die Ordnerstruktur eines Erstklässlers an der KBW kann so aussehen:\nDocuments\\\n         ├──Schule\\\n         |       ├──Deutsch\n         |       ├──Franz\n         |       ├──Mathe\n         |       ├──WR\n         |       └──...\n         ├──Privat\\\n         |       ├──Rechnungen\n         |       └──..."
  },
  {
    "objectID": "files/lektionen_hs25/250901_probleme/probleme.html",
    "href": "files/lektionen_hs25/250901_probleme/probleme.html",
    "title": "Problemlösung in der Informatik",
    "section": "",
    "text": "Dieses Jupyter Notebook herunterladen"
  },
  {
    "objectID": "files/lektionen_hs25/250901_probleme/probleme.html#ausgangslage",
    "href": "files/lektionen_hs25/250901_probleme/probleme.html#ausgangslage",
    "title": "Problemlösung in der Informatik",
    "section": "Ausgangslage",
    "text": "Ausgangslage\nJede Disziplin hat ihre eigene Art, Probleme zu lösen. Das ist in der Informatik nicht anders.\nIn der Informatik versucht man, grosse Probleme in kleinere Teilprobleme zu zerlegen. Das macht man so lange, bis die Teilprobleme so klein sind, dass sie einfach zu lösen sind.\nDies soll hier anhand von verschidenen Grafiken gezigt werden.\nDamit in Python einfach mit Grafiken gearbeitet werden kann, wird das Paket PyTamaro verwendet. Dieses Paket wurde von der Università della Svizzera italiana (USI) extra für die Informatik-Ausbildung entwickelt.\nDamit das Paket verwendet werden kann, muss es zuerst in der aktuellen Python Virtual Environment installiert werden.\nDazu öffnen Sie ein Terminal im Ordner, in dem sich dieses Jupyter Notebook befindet. Anschliessend starten Sie die Python Virtual Environment mit dem Befehl:\n.venv\\Scripts\\activate\nDanach können Sie PyTamaro mit dem Befehl\npip install pytamaro\ninstallieren.\nUm das Paket zu verwenden, muss es importiert werden. Die genauen Zusammenhänge müssen im Moment nicht bekannt sein. Wichtig ist lediglich, dass die folgende Zelle ausgeführt wird.\n\nfrom pytamaro.de import (\n    rechteck, kreis_sektor,\n    blau, rot, weiss, schwarz,\n    neben, ueber, ueberlagere,\n    drehe, kombiniere,\n    zeige_grafik, speichere_grafik,\n)"
  },
  {
    "objectID": "files/lektionen_hs25/250901_probleme/probleme.html#beispiel-tricolore",
    "href": "files/lektionen_hs25/250901_probleme/probleme.html#beispiel-tricolore",
    "title": "Problemlösung in der Informatik",
    "section": "Beispiel: Tricolore",
    "text": "Beispiel: Tricolore\nDie Vorgehensweise wird anhand der Französischen Nationalflagge (Tricolore) gezigt.\n\nUm die Zeichnung der Tricolore zu planen, wird die Grafik in ihre Einzelteile zerlegt.\nDie Tricolore besteht aus drei gleich grossen Rechtecken in den Farben blau, rot und weiss. Diese Rechtecke werden nebeneinander angeordnet.\nDas bedeutet, dass die Länge und die Breite der Rechtecke definiert werden muss und basierend auf diesen Werten die drei Rechtecke gezeichnet werden. Anschliessend werden die drei Rechtecke nebeneinander angeordnet.\nDer Befehl zum Zeichnen eines Rechtecks lautet\nname = rechteck(länge, breite, farbe)\nBevor die Zeichnung tatsächlich erstellt wird, soll hier der Befehl im Detail erklärt werden:\n\nname ist der Name, unter dem das Rechteck gespeichert wird. Dieser Name kann später verwendet werden, um auf das Rechteck zuzugreifen.\nrechteck ist der Befehl, der ein Rechteck zeichnet. In der Klammer hinter dem Befehl werden die sogenannten Argumente angegeben. Diese steuern, wie das Rechteck aussieht.\nlänge und breite sind die Argumente, die die Grösse des Rechtecks bestimmen. Diese Werte können beliebig gewählt werden.\nfarbe ist das Argument, das die Farbe des Rechtecks bestimmt. Aufgrund der Eigenheiten von PyTamaro können ausschliesslich die Farben verwendet werden, welche importiert worden sind.\n\n\nRechtecke zeichnen\nAls erstes wird hier gezeigt, wie das blaue Rechteck gezeichnetwird.\nDamit das Resultat kontrolliert werden kann, wird die Grafik mit dem Befehl\nzeige_grafik(name)\nangezeigt.\n\nbleu = rechteck(50, 100, blau)\nzeige_grafik(bleu)\n\n\n\n\n\n\n\n\nNachdem das blaue Rechteck gezeichnet wurde, kann das weisse und das rote Rechteck analog gezeichnet und angzeigt werden.\n\n# TODO: Rechtecke blanc und rouge zeichnen -&gt; Schreiben Sie hier Ihren\n# Code\nblanc = rechteck(50, 100, weiss)\nrouge = rechteck(50, 100, rot)\n\nAls nächstes werden die drei Rechtecke nebeninander angeordnet. Dazu wird der Befehl neben verwendet. Dieser Befehl nimmt zwei Argumente entgegen: das erste Rechteck und das zweite Rechteck. Das erste Rechteck wird links vom zweiten Rechteck gezeichnet.\nresultat = neben(linke grafik, rechte grafik)\n\nzwei_drittel = neben(bleu, blanc)\nzeige_grafik(zwei_drittel)\n\n\n\n\n\n\n\n\nAnalog können Sie nun das rote Rechteck rechts der zwei Drittel anordnen. Nennen Sie das Resultat tricolore und zeigen Sie es an.\n\n# TODO: Trcolore zusammenfügen -&gt; Schreiben Sie hier Ihren\n# Code"
  },
  {
    "objectID": "files/lektionen_hs25/250901_probleme/probleme.html#beispiel-österreichische-flagge",
    "href": "files/lektionen_hs25/250901_probleme/probleme.html#beispiel-österreichische-flagge",
    "title": "Problemlösung in der Informatik",
    "section": "Beispiel: Österreichische Flagge",
    "text": "Beispiel: Österreichische Flagge\nZeichnen Sie die Österreichische Flagge. Das Seitenverhältnis der Flagge ist 2:3.\n\nUm Elemente übereinander anzuordnen, wird der Befehl ueber verwendet. Die Syntax dieses Befehls lautet:\nresultat = ueber(obere grafik, untere grafik)\n\n# TODO: Östereichische Flagge zeichnen -&gt; Schreiben Sie hier Ihren\n# Code"
  },
  {
    "objectID": "files/lektionen_hs25/250901_probleme/probleme.html#beispiel-schweizerfahne",
    "href": "files/lektionen_hs25/250901_probleme/probleme.html#beispiel-schweizerfahne",
    "title": "Problemlösung in der Informatik",
    "section": "Beispiel: Schweizerfahne",
    "text": "Beispiel: Schweizerfahne\nZeichnen Sie eine korrekt propotionierte Schweizerfahne. Die Dimensionen können Sie der folgenden Grafik entnehmen:\n\nVerwenden Sie dazu die Befehle rechteck, drehe und ueberlagere.\n\n# TODO: Schweizerfahne zeichnen -&gt; Schreiben Sie hier Ihren\n# Code"
  },
  {
    "objectID": "files/lektionen_hs25/250901_probleme/probleme.html#beispiel-tessiner-wappen",
    "href": "files/lektionen_hs25/250901_probleme/probleme.html#beispiel-tessiner-wappen",
    "title": "Problemlösung in der Informatik",
    "section": "Beispiel: Tessiner Wappen",
    "text": "Beispiel: Tessiner Wappen\nAls Referenz an die USI zeichnen Sie als letztes Beispiel das Tessiner Wappen.\n\nVerwenden Sie dazu neben den bereits bekannten Befehlen zusätzlich die Befehle ueber und kreis_sektor.\n\n# TODO: Tessiner Wappen zeichnen -&gt; Schreiben Sie hier Ihren\n# Code"
  },
  {
    "objectID": "docs/files/lektionen_hs25/250901_probleme/probleme.html",
    "href": "docs/files/lektionen_hs25/250901_probleme/probleme.html",
    "title": "Problemlösung in der Informatik",
    "section": "",
    "text": "Dieses Jupyter Notebook herunterladen"
  },
  {
    "objectID": "docs/files/lektionen_hs25/250901_probleme/probleme.html#ausgangslage",
    "href": "docs/files/lektionen_hs25/250901_probleme/probleme.html#ausgangslage",
    "title": "Problemlösung in der Informatik",
    "section": "Ausgangslage",
    "text": "Ausgangslage\nJede Disziplin hat ihre eigene Art, Probleme zu lösen. Das ist in der Informatik nicht anders.\nIn der Informatik versucht man, grosse Probleme in kleinere Teilprobleme zu zerlegen. Das macht man so lange, bis die Teilprobleme so klein sind, dass sie einfach zu lösen sind.\nDies soll hier anhand von verschidenen Grafiken gezigt werden.\nDamit in Python einfach mit Grafiken gearbeitet werden kann, wird das Paket PyTamaro verwendet. Dieses Paket wurde von der Università della Svizzera italiana (USI) extra für die Informatik-Ausbildung entwickelt.\nDamit das Paket verwendet werden kann, muss es zuerst in der aktuellen Python Virtual Environment installiert werden.\nDazu öffnen Sie ein Terminal im Ordner, in dem sich dieses Jupyter Notebook befindet. Anschliessend starten Sie die Python Virtual Environment mit dem Befehl:\n.venv\\Scripts\\activate\nDanach können Sie PyTamaro mit dem Befehl\npip install pytamaro\ninstallieren.\nUm das Paket zu verwenden, muss es importiert werden. Die genauen Zusammenhänge müssen im Moment nicht bekannt sein. Wichtig ist lediglich, dass die folgende Zelle ausgeführt wird.\n\nfrom pytamaro.de import (\n    rechteck, kreis_sektor,\n    blau, rot, weiss, schwarz,\n    neben, ueber, ueberlagere,\n    drehe, kombiniere,\n    zeige_grafik, speichere_grafik,\n)"
  },
  {
    "objectID": "docs/files/lektionen_hs25/250901_probleme/probleme.html#beispiel-tricolore",
    "href": "docs/files/lektionen_hs25/250901_probleme/probleme.html#beispiel-tricolore",
    "title": "Problemlösung in der Informatik",
    "section": "Beispiel: Tricolore",
    "text": "Beispiel: Tricolore\nDie Vorgehensweise wird anhand der Französischen Nationalflagge (Tricolore) gezigt.\n\nUm die Zeichnung der Tricolore zu planen, wird die Grafik in ihre Einzelteile zerlegt.\nDie Tricolore besteht aus drei gleich grossen Rechtecken in den Farben blau, rot und weiss. Diese Rechtecke werden nebeneinander angeordnet.\nDas bedeutet, dass die Länge und die Breite der Rechtecke definiert werden muss und basierend auf diesen Werten die drei Rechtecke gezeichnet werden. Anschliessend werden die drei Rechtecke nebeneinander angeordnet.\nDer Befehl zum Zeichnen eines Rechtecks lautet\nname = rechteck(länge, breite, farbe)\nBevor die Zeichnung tatsächlich erstellt wird, soll hier der Befehl im Detail erklärt werden:\n\nname ist der Name, unter dem das Rechteck gespeichert wird. Dieser Name kann später verwendet werden, um auf das Rechteck zuzugreifen.\nrechteck ist der Befehl, der ein Rechteck zeichnet. In der Klammer hinter dem Befehl werden die sogenannten Argumente angegeben. Diese steuern, wie das Rechteck aussieht.\nlänge und breite sind die Argumente, die die Grösse des Rechtecks bestimmen. Diese Werte können beliebig gewählt werden.\nfarbe ist das Argument, das die Farbe des Rechtecks bestimmt. Aufgrund der Eigenheiten von PyTamaro können ausschliesslich die Farben verwendet werden, welche importiert worden sind.\n\n\nRechtecke zeichnen\nAls erstes wird hier gezeigt, wie das blaue Rechteck gezeichnetwird.\nDamit das Resultat kontrolliert werden kann, wird die Grafik mit dem Befehl\nzeige_grafik(name)\nangezeigt.\n\nbleu = rechteck(50, 100, blau)\nzeige_grafik(bleu)\n\n\n\n\n\n\n\n\nNachdem das blaue Rechteck gezeichnet wurde, kann das weisse und das rote Rechteck analog gezeichnet und angzeigt werden.\n\n# TODO: Rechtecke blanc und rouge zeichnen -&gt; Schreiben Sie hier Ihren\n# Code\nblanc = rechteck(50, 100, weiss)\nrouge = rechteck(50, 100, rot)\n\nAls nächstes werden die drei Rechtecke nebeninander angeordnet. Dazu wird der Befehl neben verwendet. Dieser Befehl nimmt zwei Argumente entgegen: das erste Rechteck und das zweite Rechteck. Das erste Rechteck wird links vom zweiten Rechteck gezeichnet.\nresultat = neben(linke grafik, rechte grafik)\n\nzwei_drittel = neben(bleu, blanc)\nzeige_grafik(zwei_drittel)\n\n\n\n\n\n\n\n\nAnalog können Sie nun das rote Rechteck rechts der zwei Drittel anordnen. Nennen Sie das Resultat tricolore und zeigen Sie es an.\n\n# TODO: Trcolore zusammenfügen -&gt; Schreiben Sie hier Ihren\n# Code"
  },
  {
    "objectID": "docs/files/lektionen_hs25/250901_probleme/probleme.html#beispiel-österreichische-flagge",
    "href": "docs/files/lektionen_hs25/250901_probleme/probleme.html#beispiel-österreichische-flagge",
    "title": "Problemlösung in der Informatik",
    "section": "Beispiel: Österreichische Flagge",
    "text": "Beispiel: Österreichische Flagge\nZeichnen Sie die Österreichische Flagge. Das Seitenverhältnis der Flagge ist 2:3.\n\nUm Elemente übereinander anzuordnen, wird der Befehl ueber verwendet. Die Syntax dieses Befehls lautet:\nresultat = ueber(obere grafik, untere grafik)\n\n# TODO: Östereichische Flagge zeichnen -&gt; Schreiben Sie hier Ihren\n# Code"
  },
  {
    "objectID": "docs/files/lektionen_hs25/250901_probleme/probleme.html#beispiel-schweizerfahne",
    "href": "docs/files/lektionen_hs25/250901_probleme/probleme.html#beispiel-schweizerfahne",
    "title": "Problemlösung in der Informatik",
    "section": "Beispiel: Schweizerfahne",
    "text": "Beispiel: Schweizerfahne\nZeichnen Sie eine korrekt propotionierte Schweizerfahne. Die Dimensionen können Sie der folgenden Grafik entnehmen:\n\nVerwenden Sie dazu die Befehle rechteck, drehe und ueberlagere.\n\n# TODO: Schweizerfahne zeichnen -&gt; Schreiben Sie hier Ihren\n# Code"
  },
  {
    "objectID": "docs/files/lektionen_hs25/250901_probleme/probleme.html#beispiel-tessiner-wappen",
    "href": "docs/files/lektionen_hs25/250901_probleme/probleme.html#beispiel-tessiner-wappen",
    "title": "Problemlösung in der Informatik",
    "section": "Beispiel: Tessiner Wappen",
    "text": "Beispiel: Tessiner Wappen\nAls Referenz an die USI zeichnen Sie als letztes Beispiel das Tessiner Wappen.\n\nVerwenden Sie dazu neben den bereits bekannten Befehlen zusätzlich die Befehle ueber und kreis_sektor.\n\n# TODO: Tessiner Wappen zeichnen -&gt; Schreiben Sie hier Ihren\n# Code"
  }
]